{% extends 'base.html.twig' %}

{% block title %}Hello TaskController!{% endblock %}

{% block body %}
{# templates/task/new.html.twig #}

{# ... #}

{{ form_start(form) }}
    {# render the task's only field: description #}
    {{ form_row(form.description) }}

    <h3>Tags</h3>
    <ol id="idOlProposition" class="tags" data-prototype="{{ form_widget(form.tags.vars.prototype)|e('html_attr') }}">
        {# iterate over each existing tag and render its only field: name #}
        {% for tag in form.tags %}
            <li>
                {{ form_row(tag.name) }}
            </li>
        {% endfor %}
    </ol>
    <div id="add_button"></div>
    <button type="submit">Valider</button>
{{ form_end(form) }}

{# ... #}
<script>
/*
var cpt=1;
function newProposition() {
	let proposition = new FormCollectionTypeClass("idOlProposition","add_button","Supprimer cet élément","Ajouter une nouvelle proposition",cpt);
}

newProposition();


//initialisation de la variable olProposition

let olProposition=document.getElementById("idOlProposition");

//suppression des styles de la liste ordonnée (suppression des numéros)
olProposition.style.listStyleType="none";

//initialisation et stockage des labels dans un tableau
let tablabel = idOlProposition.getElementsByTagName("label");
for (i=0;i<tablabel.length;i++) {
    var label = [];
    label.push(tablabel[i].textContent);
}

function edit_label() {
    let tab=olProposition.getElementsByTagName("li");
    for (let i=0;i<tab.length;i++) {
        let tabli = tab[i].getElementsByTagName("label");
        for (let j=0;j<tabli.length;j++) {
            var compteur = i + 1;
            tabli[j].innerHTML=compteur + ". " + label[j] + " n°" + compteur + " :"; 
        }
    }        
}

function create_button(param,action) {
    let btSup = document.createElement("button");
    btSup.innerHTML="Supprimer cet élément";
    btSup.addEventListener("click", function(){
        if (action=="delete") {
            olProposition.removeChild(param);
            edit_label();
        } else {
            btSup.type="button";
            add();
        }
    });
    param.appendChild(btSup);
}

edit_label();

let tab=olProposition.getElementsByTagName("li");
create_button(tab[0],"delete");

var cpt=1;
function add() {
    var data = olProposition.getAttribute("data-prototype");
    data = data.replace(/__name__/g, cpt++);
    let x = document.createElement("li");
    x.innerHTML=data;
    create_button(x,"delete");
    olProposition.appendChild(x);
    edit_label();
}

create_button(add_button,"add");
*/


</script>

{% endblock %}
